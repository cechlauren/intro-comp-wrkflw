## A Simple Computational Workflow
## PSPG 245B.2 Systems Pharmacology

## W. Connell
## 2020.02.13

# open terminal

# git should be installed system wide if you used the
# download/install link provided
# check it is installed with
# if there are issues in the follow steps reference
# https://help.github.com/en/github/using-git/setting-your-username-in-git

git --version


# set your global github username and email

git config --global user.name "your_username"
git config --global user.email "your_email@gmail.com"
# check this
git config --global user.name
git config --global user.email


# create a parent directory for your GitHub repositories
# this is unrelated to the conda environment or git
# this is just part of your file tree
# which is accessible when you are in any conda env

mkdir github
cd github


# fork my GitHub repository
# go to https://github.com/wconnell/intro-comp-wrkflw
# and in the upper right corner click "Fork"
# this will create an exact copy of my repo in your
# GitHub account

# this will not track any changes I make to mine
# for collaborative software development you can set
# a fork up to track changes and update them based on the
# repo you have forked from

# go to your forked repo version
# click "clone or download" (green button)
# copy the text
# clone the forked repo

git clone git@github.com:your_username/intro-comp-wrkflw.git


# this will fail unless you have already set up a connection
# between your computer and github via ssh
# reference this webpage to setup a ssh key on github
# so the github server will recognize your computer
# Follow the directions on the site closely...
# First check if you have a ssh key on your computer! you should!
# avoid generating extra ssh keys! they clutter everything up!

# https://help.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account


# once you have completed this (fingers crossed...)
# you can go back and clone the forked repo

git clone git@github.com:your_username/intro-comp-wrkflw.git


# move into the cloned directory
# and check the version control status

cd intro-comp-wrkflw
git status


# inspect the directory and 
# the first few lines of the environment file

ls
head environment.yml


# the environment.yml file contains directions
# for conda to create a new environment
# which I have defined with a name and set of packages
# activate it following successful creation/installation

conda env create -f environment.yml
conda activate intro-comp-wrkflw


# remember that although the conda environment has the same
# name as the git repo, these are separate!
# you can activate a different conda env and still
# manipulate this repo
# things like the .ipynb file may not run because
# it has a set of dependencies (python packages) that the
# conda environment is required to have in order for proper usage

# we will go through an exercise to highlight this concept
# and introduce so more funcitonality

# run jupyter lab
# you may need to try a different port, 8888 is always a good one
# although if you are already running a notebook on your computer
# it may not be available
# you should be able to navigate through directories on the right

jupyter lab --port=4200 --no-browser &
# next, simply click on unsupervised.ipynb